---
- name: Playbook para parchar servidores Linux
  hosts: all
  become: true
  vars:
    telegram_bot_token: "TU_TELEGRAM_BOT_TOKEN"
    telegram_chat_id: "TU_CHAT_ID"

  tasks:
    - name: Actualizar los paquetes a la última versión
      ansible.builtin.yum:
        name: "*"
        state: latest
      register: update_result
      changed_when: update_result.changed
      failed_when: update_result.failed or update_result.msg is defined

    - name: Verificar si es necesario reiniciar el servidor (RHEL-based)
      ansible.builtin.command: needs-restarting -r
      register: needs_reboot_check
      changed_when: needs_reboot_check.rc == 0
      failed_when: needs_reboot_check.rc not in [0, 1]

    - name: Reiniciar el servidor si es necesario
      ansible.builtin.reboot:
        msg: "Reiniciando el servidor debido a la actualización de paquetes"
        reboot_timeout: 600
      when: needs_reboot_check.rc == 0

    - name: Esperar a que el servidor esté disponible después del reinicio
      ansible.builtin.wait_for_connection:
        timeout: 300
      when: needs_reboot_check.rc == 0

    - name: Enviar notificación de actualización a Telegram
      ansible.builtin.uri:
        url: "https://api.telegram.org/bot{{ telegram_bot_token }}/sendMessage"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body: |
          {
            "chat_id": "{{ telegram_chat_id }}",
            "text": "El servidor ha sido actualizado y reiniciado si era necesario."
          }
      delegate_to: localhost
